When would you want to use a remote repository rather than keeping all your work local?

    If you want to collaborate with others or just make your code available for others to see

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

    So it doesn't update your project while you are in the middle of something causing it to break

Describe the differences between forks, clones, and branches. When would you use one instead of another?

    A clone is for making a copy of a repository you have permissions to change.
    A fork is for copying a repository that you don't have permissions to change.
    A branch is for organizing code within a repository.

What is the benefit of having a copy of the last known state of the remote stored locally?

    It would allow you to work offline locally, but still have the ability to compare/merge with origin/master.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

    I've used other tools such as CVS and SVN for collaborating, but these didn't have a public/web aspect to it. 
    So git allows for a broader community in that sense. If you're project is popular and lots of people are trying 
    to make changes to it, that could make it difficult to maintain all the change requests.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

    It's a good idea to use a separate branch when working on new ideas that could break the build, or when working on a project with others.
    This allows for your work to be done independently without screwing up the master branch; you can merge (or create a pull request) when
    it's ready for prime-time.
